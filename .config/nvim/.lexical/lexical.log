10:59:29.028 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.118.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
10:59:29.028 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.117.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
10:59:29.028 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.113.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
10:59:29.028 [info] Application logger started at :nonode@nohost
10:59:29.810 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.1527.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
10:59:29.810 [info] Application runtime_tools started at :nonode@nohost
10:59:29.812 [info] Application erts started at :nonode@nohost
10:59:29.812 [info] Application lx_lexical_shared started at :nonode@nohost
10:59:29.812 [info] Application lx_lexical_test started at :nonode@nohost
10:59:29.813 [info] Child LXSnowflake.Generator of Supervisor #PID<0.1534.0> (Supervisor.Default) started
Pid: #PID<0.1535.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:29.813 [info] Application lx_snowflake started at :nonode@nohost
10:59:29.813 [info] Application lx_sourceror started at :nonode@nohost
10:59:29.813 [info] Application lx_common started at :nonode@nohost
10:59:29.813 [info] Application lx_elixir_sense started at :nonode@nohost
10:59:29.813 [info] Application jason started at :nonode@nohost
10:59:29.813 [info] Application logger_file_backend started at :nonode@nohost
10:59:29.813 [info] Application lx_path_glob started at :nonode@nohost
10:59:29.813 [info] Application lx_proto started at :nonode@nohost
10:59:29.813 [info] Application lx_protocol started at :nonode@nohost
10:59:29.824 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1548.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:29.827 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1549.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:29.827 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1550.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
10:59:29.827 [info] Child LXical.Server.TaskQueue.State.TaskSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1551.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.TaskQueue.State.TaskSupervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
10:59:29.827 [info] Child LXical.Server.TaskQueue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1552.0>
Start Call: LXical.Server.TaskQueue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:29.827 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1553.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:29.827 [info] Application lx_server started at :nonode@nohost
10:59:29.837 [info] Starting project at uri 
10:59:29.843 [info] Lexical Initialized
10:59:29.844 [info] opened file:///Users/rahulnavneeth/.config/nvim/e.ex
10:59:31.096 [error] GenServer LXical.Server terminating
** (FunctionClauseError) no function clause matching in IO.chardata_to_string/1
    (elixir 1.17.2) lib/io.ex:696: IO.chardata_to_string(nil)
    (elixir 1.17.2) lib/path.ex:507: Path.basename/1
    (lx_lexical_shared 0.5.0) lib/lexical/project.ex:60: LXical.Project.name/1
    (lx_lexical_shared 0.5.0) lib/lexical/project.ex:80: LXical.Project.node_name/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:98: LXical.RemoteControl.call/4
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
Last message: {:"$gen_cast", {:protocol_message, %{__struct__: LXical.Protocol.Notifications.DidChange, document: nil, lsp: %{__struct__: LXical.Protocol.Notifications.DidChange.LSP, text_document: #Protocol.Types.TextDocument.Versioned.Identifier<[version: 4, uri: "file:///Users/rahulnavneeth/.config/nvim/e.ex"]>, method: "textDocument/didChange", jsonrpc: "2.0", content_changes: [#Protocol.Types.TextDocument.ContentChangeEvent.TextDocumentContentChangeEvent<[text: "i", range: #Protocol.Types.Range<[start: #Protocol.Types.Position<[line: 0, character: 0]>, end: #Protocol.Types.Position<[line: 0, character: 0]>]>, range_length: 0]>]}, text_document: nil, method: "textDocument/didChange", jsonrpc: "2.0", content_changes: nil}}}
State: %{__struct__: LXical.Server.State, configuration: %{__struct__: LXical.Server.Configuration, project: %{__struct__: LXical.Project, entropy: 23858, project_module: nil, mix_exs_uri: nil, mix_project?: false, root_uri: nil, env_variables: %{}, mix_env: nil, mix_target: nil}, support: %{deprecated: true, __struct__: LXical.Server.Configuration.Support, snippet: true, work_done_progress: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: #Protocol.Types.SignatureHelp.ClientCapabilities<[dynamic_registration: false, signature_information: #Protocol.Types.SignatureHelp.ClientCapabilities.SignatureInformation<[documentation_format: [:markdown, :plain_text], active_parameter_support: true, parameter_information: #Protocol.Types.SignatureHelp.ClientCapabilities.ParameterInformation<[label_offset_support: true]>]>]>, code_action_dynamic_registration: false, hierarchical_symbols: true}, client_name: "Neovim", dialyzer_enabled?: false, additional_watched_extensions: nil}, in_flight_requests: %{}, initialized?: true, shutdown_received?: false}
10:59:31.113 [error] Process LXical.Server (#PID<0.1549.0>) terminating
** (FunctionClauseError) no function clause matching in IO.chardata_to_string/1
    (elixir 1.17.2) lib/io.ex:696: IO.chardata_to_string(nil)
    (elixir 1.17.2) lib/path.ex:507: Path.basename/1
    (lx_lexical_shared 0.5.0) lib/lexical/project.ex:60: LXical.Project.name/1
    (lx_lexical_shared 0.5.0) lib/lexical/project.ex:80: LXical.Project.node_name/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:98: LXical.RemoteControl.call/4
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.1546.0>]
Message Queue Length: 1
Messages: ["$gen_cast": {:protocol_message, %{id: 2, position: nil, context: nil, __struct__: LXical.Protocol.Requests.Completion, document: nil, lsp: %{id: 2, position: #Protocol.Types.Position<[line: 0, character: 1]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///Users/rahulnavneeth/.config/nvim/e.ex"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: nil, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}}]
Links: [#PID<0.1547.0>]
Dictionary: [rand_seed: {%{type: :exsss, next: #Function<0.65977474/1 in :rand.exsss_next>, bits: 58, uniform: #Function<1.65977474/1 in :rand.exsss_uniform>, uniform_n: #Function<2.65977474/2 in :rand.exsss_uniform>, jump: #Function<3.65977474/1 in :rand.exsplus_jump>}, [47515172223824991 | 155267415095229565]}]
Trapping Exits: false
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 24618
10:59:31.115 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (FunctionClauseError) no function clause matching in IO.chardata_to_string/1
        (elixir 1.17.2) lib/io.ex:696: IO.chardata_to_string(nil)
        (elixir 1.17.2) lib/path.ex:507: Path.basename/1
        (lx_lexical_shared 0.5.0) lib/lexical/project.ex:60: LXical.Project.name/1
        (lx_lexical_shared 0.5.0) lib/lexical/project.ex:80: LXical.Project.node_name/1
        (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:98: LXical.RemoteControl.call/4
        (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
        (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
        (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
Pid: #PID<0.1549.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:31.116 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1554.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:31.646 [error] Received textDocument/didChange before server was initialized
10:59:31.647 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
10:59:31.647 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
10:59:32.463 [error] Received textDocument/didChange before server was initialized
10:59:32.466 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
10:59:32.466 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
10:59:32.484 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%{id: 3, position: LxPos<<1, 2>>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion, document: #Inspect.Error<
  got UndefinedFunctionError with message:

      """
      function Code.Identifier.inspect_as_atom/1 is undefined or private
      """

  while inspecting:

      %{
        version: 4,
        path: "/Users/rahulnavneeth/.config/nvim/e.ex",
        uri: "file:///Users/rahulnavneeth/.config/nvim/e.ex",
        __struct__: LXical.Document,
        lines: %Lines<"i..."(1 line)>,
        dirty?: true,
        language_id: "elixir"
      }

  Stacktrace:

    (elixir 1.17.2) Code.Identifier.inspect_as_atom(LXical.Document)
    (lx_lexical_shared 0.5.0) lib/lexical/document.ex:25: Inspect.LXical.Document.inspect/2
    (elixir 1.17.2) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.2) lib/inspect.ex:287: Inspect.List.keyword/2
    (elixir 1.17.2) lib/inspect/algebra.ex:478: Inspect.Algebra.container_each/6
    (elixir 1.17.2) lib/inspect/algebra.ex:455: Inspect.Algebra.container_doc/6
    (elixir 1.17.2) lib/inspect/algebra.ex:347: Inspect.Algebra.to_doc/2
    (elixir 1.17.2) lib/kernel.ex:2381: Kernel.inspect/2

>, lsp: %{id: 3, position: #Protocol.Types.Position<[line: 0, character: 1]>, context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, __struct__: LXical.Protocol.Requests.Completion.LSP, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///Users/rahulnavneeth/.config/nvim/e.ex"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///Users/rahulnavneeth/.config/nvim/e.ex"]>, method: "textDocument/completion", jsonrpc: "2.0", partial_result_token: nil, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.2) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.2) lib/task/supervised.ex:36: Task.Supervised.reply/4

10:59:32.576 [error] Received textDocument/didChange before server was initialized
10:59:32.577 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
10:59:32.577 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
10:59:35.091 [error] Received shutdown before server was initialized
10:59:35.099 [error] Failed to handle Elixir.LXical.Protocol.Requests.Shutdown, {{:error, :not_initialized}, %{__struct__: LXical.Server.State, configuration: nil, in_flight_requests: %{}, initialized?: false, shutdown_received?: false}}
10:59:35.099 [error] Could not handle message LXical.Protocol.Requests.Shutdown :ok
10:59:35.108 [error] stdio received :eof, server will stop.
10:59:35.108 [error] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor terminated
** (exit) normal
Pid: #PID<0.1553.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
10:59:35.108 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.1556.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
